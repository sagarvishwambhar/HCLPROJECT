package com.hclcv.generated.restfulapi;

import java.util.*;

import com.hclcv.generated.mapper.ProfessionalsynopsisMapper;
import com.hclcv.generated.model.Professionalsynopsis;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import com.hclcv.generated.service.ProfessionalsynopsisService;
import javax.annotation.Generated;
import javax.annotation.Generated;

@Generated(
	value = {
		"https://github.com/coolcooldee/sloth",
		"Sloth version:1.0"
	},
	comments = "This class is generated by Sloth"
)
@RestController
@RequestMapping(value = "/professionalsynopsis")
public class ProfessionalsynopsisController {

	@Autowired
	private ProfessionalsynopsisService professionalsynopsisService;
	
	@Autowired
	ProfessionalsynopsisMapper professionalsynopsisMapper;


	@RequestMapping(value = "/test", method = RequestMethod.GET)
	public String test(@ModelAttribute Professionalsynopsis professionalsynopsis) {
		return "success";
	}

	@RequestMapping(value = "/save", method = RequestMethod.POST)
	public void save(@ModelAttribute Professionalsynopsis professionalsynopsis) {
		
		Professionalsynopsis mainprofessionalsynopsis = new Professionalsynopsis();
		mainprofessionalsynopsis.setId(professionalsynopsis.getId());
		mainprofessionalsynopsis.setSynopsistext(professionalsynopsis.getSynopsistext());
		mainprofessionalsynopsis.setSapid(professionalsynopsis.getSapid());
		mainprofessionalsynopsis.setEmployeeid(professionalsynopsis.getEmployeeid());
		mainprofessionalsynopsis.setStatus(professionalsynopsis.getStatus());
		professionalsynopsisMapper.save(mainprofessionalsynopsis);
//		professionalsynopsisService.save(professionalsynopsis);
	}

	@RequestMapping(value = "/delete/{id}", method = RequestMethod.POST)
	public void  delete(@PathVariable Integer id) {
		professionalsynopsisService.deleteById(id);
	}

	@RequestMapping(value = "/view/{id}", method = RequestMethod.GET)
	public Professionalsynopsis  view(@PathVariable Integer id) {
		return professionalsynopsisService.getById(id);
	}

	@RequestMapping(value = "/update", method = RequestMethod.POST)
	public void update(@ModelAttribute Professionalsynopsis professionalsynopsis) {

		Professionalsynopsis mainprofessionalsynopsis = new Professionalsynopsis();
		mainprofessionalsynopsis.setId(professionalsynopsis.getId());
		mainprofessionalsynopsis.setSynopsistext(professionalsynopsis.getSynopsistext());
		mainprofessionalsynopsis.setSapid(professionalsynopsis.getSapid());
		mainprofessionalsynopsis.setEmployeeid(professionalsynopsis.getEmployeeid());
		mainprofessionalsynopsis.setStatus(professionalsynopsis.getStatus());
		professionalsynopsisMapper.save(mainprofessionalsynopsis);

		//		professionalsynopsisService.update(professionalsynopsis);
	}


	@RequestMapping(value = "/list", method = RequestMethod.GET)
	public List<Professionalsynopsis> list() {
		return professionalsynopsisService.list();
	}


}